legend.key = element_blank(), #remove grey behind each point
legend.text = element_text(color = myPal["light_text"], size = 11, family = "Roboto"),
plot.title.position = "plot",
axis.title.y = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
axis.title.x = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
# axis.ticks = element_line(color=myPal["light_text"]),
axis.ticks = element_blank(),
axis.text = element_text(color=myPal["light_text"]),
# axis.line = element_line(color=myPal["light_text"]),
axis.line = element_blank(),
text = element_text(family = "Roboto", colour = myPal[3]),
plot.caption = element_text(family = "Roboto", colour = myPal["light_text"],
hjust = c(-0.04,1)), #Allows captions in bottom right and bottom left
plot.title = ggtext::element_textbox_simple(family = "Roboto",
size = 17,
face = "bold",
halign = 0, colour = myPal["dark_text"]),
plot.background = element_rect(fill  = myPal["back_color"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = lighten(myPal["light_text",0.5]))
panel.background = element_blank())
#Save plot making code as function
plot_func <- function(Data, X, Y,
xTitle, yTitle, mainTitle,
textX, textY,
ZeroLineColor=NULL) {
Data$tooltip <- c(paste0("Name = ", Data$Name, "\n Year = ", Data$Year,
"\n Age = ", Data$Age, "\n Matches = ", Data$Matches))
p <- ggplot(Data, aes(x=X, y=Y, color=Age_Category)) +
geom_point_interactive(tooltip = Data$tooltip, data_id=Data$Name) +
scale_color_manual(values=colPal[1:3])+
ggtitle(mainTitle,
subtitle = "\n" ) + #creat space at top-left for legend
xlab(xTitle) +
ylab(yTitle) +
theme(
legend.position = c(0.175,1.05),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.background = element_rect(fill =myPal["back_color"]),
legend.key = element_blank(), #remove grey behind each point
legend.text = element_text(color = myPal["light_text"], size = 11, family = "Roboto"),
plot.title.position = "plot",
axis.title.y = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
axis.title.x = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
# axis.ticks = element_line(color=myPal["light_text"]),
axis.ticks = element_blank(),
axis.text = element_text(color=myPal["light_text"]),
# axis.line = element_line(color=myPal["light_text"]),
axis.line = element_blank(),
text = element_text(family = "Roboto", colour = myPal[3]),
plot.caption = element_text(family = "Roboto", colour = myPal["light_text"],
hjust = c(-0.04,1)), #Allows captions in bottom right and bottom left
plot.title = ggtext::element_textbox_simple(family = "Roboto",
size = 17,
face = "bold",
halign = 0, colour = myPal["dark_text"]),
plot.background = element_rect(fill  = myPal["back_color"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = lighten(myPal["light_text",0.5])),
panel.background = element_blank())
girafe(ggobj = p)
}
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
#Save plot making code as function
plot_func <- function(Data, X, Y,
xTitle, yTitle, mainTitle,
textX, textY,
ZeroLineColor=NULL) {
Data$tooltip <- c(paste0("Name = ", Data$Name, "\n Year = ", Data$Year,
"\n Age = ", Data$Age, "\n Matches = ", Data$Matches))
p <- ggplot(Data, aes(x=X, y=Y, color=Age_Category)) +
geom_point_interactive(tooltip = Data$tooltip, data_id=Data$Name) +
scale_color_manual(values=colPal[1:3])+
ggtitle(mainTitle,
subtitle = "\n" ) + #creat space at top-left for legend
xlab(xTitle) +
ylab(yTitle) +
theme(
legend.position = c(0.175,1.05),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.background = element_rect(fill =myPal["back_color"]),
legend.key = element_blank(), #remove grey behind each point
legend.text = element_text(color = myPal["light_text"], size = 11, family = "Roboto"),
plot.title.position = "plot",
axis.title.y = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
axis.title.x = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
# axis.ticks = element_line(color=myPal["light_text"]),
axis.ticks = element_blank(),
axis.text = element_text(color=myPal["light_text"]),
# axis.line = element_line(color=myPal["light_text"]),
axis.line = element_blank(),
text = element_text(family = "Roboto", colour = myPal[3]),
plot.caption = element_text(family = "Roboto", colour = myPal["light_text"],
hjust = c(-0.04,1)), #Allows captions in bottom right and bottom left
plot.title = ggtext::element_textbox_simple(family = "Roboto",
size = 17,
face = "bold",
halign = 0, colour = myPal["dark_text"]),
plot.background = element_rect(fill  = myPal["back_color"]),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = lighten(myPal["light_text"],0.5)),
panel.background = element_blank())
girafe(ggobj = p)
}
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
#No messages and warnings in HTML output
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = FALSE,
fig.width = 9, fig.height = 7)
#Clear memory
rm(list = ls(all = TRUE))
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
janitor,        # data cleaning and tables
tidyverse,      # data management and visualization
knitr,          # print pretty results
plotly,         # interactive plots
worldfootballR, # Download FBref data
ggiraph,        # interactive ggplots
colorspace,     # lighten and darken text etc
showtext        # custom fonts
# RColorBrewer, # color palettes
# wesanderson   # color palettes
)
#Download advanced GK stats from FbRef for 2020-21 to 2022-23 seasons
kprs_adv <- fb_big5_advanced_season_stats(season_end_year= c(2021:2023), stat_type= "keepers_adv", team_or_player= "player")
#Download basic GK stats from FbRef for 2020-21 to 2022-23 seasons
kprs_bas <- fb_big5_advanced_season_stats(season_end_year= c(2021:2023), stat_type= "keepers", team_or_player= "player") %>%
select(Player, Season_End_Year, MP_Playing) #I only acutally need matches played from this
#Join the two datasets
myData <- full_join(kprs_adv, kprs_bas, by=c("Player","Season_End_Year"))
#Set Palette... I suffer from indecision
# myPal <- brewer.pal(8,"Dark2")
# myPal <- wes_palette(name="Darjeeling1", n=5)
# myPal <- c("#589C48","#F58024","#994FB2","#1A1A1D")
# myPal <- c("#8c38a5","#DD4D21","#3A6D41","#21ddd0","#6d3c3a","#a59838","#757780","#1A1A1D")
#Palette for plotting
myPal <- c(
back_color = lighten("#F0DCCA", 0.8),
dark_text = "#0a0903",
light_text = "grey30"
)
colPal <- c(
"#3A6D41",
"#DD4D21",
"#8c38a5"
)
#Add Roboto font family
font_add(family = "Roboto",
regular = "C:/USERS/GVAND/APPDATA/LOCAL/MICROSOFT/WINDOWS/FONTS/ROBOTO-REGULAR.ttf",
bold = "C:/USERS/GVAND/APPDATA/LOCAL/MICROSOFT/WINDOWS/FONTS/ROBOTO-BOLD.ttf")
showtext_auto()
#Cleaning
myData <- myData %>%
#Rename variables
rename("Year" = "Season_End_Year" ,
"PSxG_Abv" = "PSxG+_per__minus__Expected",
"PSxG" = "PSxG_Expected",
"Matches" = "MP_Playing",
"Lch_Cmp_Pct" = "Cmp_percent_Launched",
"Lch_Pct" = "Launch_percent_Passes",
"Lchs" = "Att_Launched",
"Cmp" = "Cmp_Launched",
"Opp" = "Opp_Crosses",
"Stp" = "Stp_Crosses",
"Stp_Pct" = "Stp_percent_Crosses",
"AvgDist" = "AvgDist_Sweeper",
"OPA" = "#OPA_Sweeper",
"OPA90" = "#OPA_per_90_Sweeper",
"Name" = "Player")
#More wrangling
myData <- myData %>%
mutate(My_Stat = PSxG_Abv/PSxG, #Create goals saved above expected per expected goal
Age_Category = case_when(     #Create age categories
Age < 25 ~ "Under 25",
Age > 30 ~ "Over 30",
TRUE ~ "25 to 30"
),
Age_Category = factor(Age_Category, levels = c("Under 25", "25 to 30", "Over 30")),
Year = case_when(
Year == 2021 ~ "2020-21",
Year == 2022 ~ "2021-22",
Year == 2023 ~ "2022-23"
)
)
#Combined data for past three seasons
aggData <- myData %>%
group_by(Name) %>%
select(Name, Squad, Matches, OPA, AvgDist, PSxG_Abv, PSxG, Lchs, Cmp, Opp, Stp, Age, Age_Category) %>%
mutate(Seasons = 1,                       #To be summed in next line to get number of seasons in data
Age=as.character(Age)) %>%         #So that it does not get summed
mutate_if(is.numeric, sum) %>%            #Sum all numeric variables to get total over past three seasons
filter(Seasons > 1, Matches >= 38) %>%    #Must have played in at least two of the last three seasons & a total of at least 38 matches
mutate(Age = as.numeric(Age),             #Turn age back into numeric
AvgDist = AvgDist/Seasons) %>%     #Average distance has to be simple average due to data available
slice_max(Age)                            #Take just one row per player with current age
curData <- myData %>%
filter(Year=="2022-23", Matches >= 15)
#Save plot making code as function
plot_func <- function(Data, X, Y,
xTitle, yTitle, mainTitle,
textX, textY,
ZeroLineColor=NULL) {
Data$tooltip <- c(paste0("Name = ", Data$Name, "\n Year = ", Data$Year,
"\n Age = ", Data$Age, "\n Matches = ", Data$Matches))
p <- ggplot(Data, aes(x=X, y=Y, color=Age_Category)) +
geom_point_interactive(tooltip = Data$tooltip, data_id=Data$Name) +
scale_color_manual(values=colPal[1:3])+
ggtitle(mainTitle,
subtitle = "\n" ) + #creat space at top-left for legend
xlab(xTitle) +
ylab(yTitle) +
theme(
legend.position = c(0.175,1.05),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.background = element_rect(fill =myPal["back_color"]),
legend.key = element_blank(), #remove grey behind each point
legend.text = element_text(color = myPal["light_text"], size = 11, family = "Roboto"),
plot.title.position = "plot",
axis.title.y = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
axis.title.x = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
# axis.ticks = element_line(color=myPal["light_text"]),
axis.ticks = element_blank(),
axis.text = element_text(color=myPal["light_text"]),
# axis.line = element_line(color=myPal["light_text"]),
axis.line = element_blank(),
text = element_text(family = "Roboto", colour = myPal[3]),
plot.caption = element_text(family = "Roboto", colour = myPal["light_text"],
hjust = c(-0.04,1)), #Allows captions in bottom right and bottom left
plot.title = ggtext::element_textbox_simple(family = "Roboto",
size = 17,
face = "bold",
halign = 0, colour = myPal["dark_text"]),
plot.background = element_rect(fill  = myPal["back_color"]),
panel.grid.minor = element_blank(),
panel.background = element_blank())
return(p)
}
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23") %>%
girafe()
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23") %>%
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23") +
geom_hline(yintercept = 0)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
p$layers = c(geom_hline(), geom_vline(), p$layers)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23") +
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Mike Maignan", "Alisson")
#For annotations
m <- aggData %>%
filter(Name %in% topKeepers)
#Plot shot stopping in last three years combined
p <- aggData %>%
plot_func(X=.$PSxG_Abv/.$PSxG, Y=.$PSxG_Abv, textX = m$PSxG_Abv/m$PSxG, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2020-21 to 2022-23")
ggiraph(ggobj = p)
#Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
janitor,        # data cleaning and tables
tidyverse,      # data management and visualization
knitr,          # print pretty results
plotly,         # interactive plots
worldfootballR, # Download FBref data
ggiraph,        # interactive ggplots
colorspace,     # lighten and darken text etc
ggrepel,        # repulsive text labels in plots
showtext        # custom fonts
# RColorBrewer, # color palettes
# wesanderson   # color palettes
)
View(aggData)
#Save plot making code as function
plot_func <- function(Data, X, Y,
xTitle, yTitle, mainTitle,
textX, textY,
ZeroLineColor=NULL) {
Data$tooltip <- c(paste0("Name = ", Data$Name, "\n Year = ", Data$Year,
"\n Age = ", Data$Age, "\n Matches = ", Data$Matches))
p <- ggplot(Data, aes(x=X, y=Y, color=Age_Category)) +
geom_point_interactive(tooltip = Data$tooltip, data_id=Data$Name) +
geom_text_repel(aes(label = case_when(
Name %in% topKeepers ~ Name,
TRUE ~ "")
)
) +
scale_color_manual(values=colPal[1:3])+
ggtitle(mainTitle,
subtitle = "\n" ) + #creat space at top-left for legend
xlab(xTitle) +
ylab(yTitle) +
theme(
legend.position = c(0.175,1.05),
legend.direction = "horizontal",
legend.margin = margin(0),
legend.background = element_rect(fill =myPal["back_color"]),
legend.key = element_blank(), #remove grey behind each point
legend.text = element_text(color = myPal["light_text"], size = 11, family = "Roboto"),
plot.title.position = "plot",
axis.title.y = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
axis.title.x = element_text(face = "bold",
color = myPal["light_text"],
size = 12,
family = "Roboto"),
# axis.ticks = element_line(color=myPal["light_text"]),
axis.ticks = element_blank(),
axis.text = element_text(color=myPal["light_text"]),
# axis.line = element_line(color=myPal["light_text"]),
axis.line = element_blank(),
text = element_text(family = "Roboto", colour = myPal[3]),
plot.caption = element_text(family = "Roboto", colour = myPal["light_text"],
hjust = c(-0.04,1)), #Allows captions in bottom right and bottom left
plot.title = ggtext::element_textbox_simple(family = "Roboto",
size = 17,
face = "bold",
halign = 0, colour = myPal["dark_text"]),
plot.background = element_rect(fill  = myPal["back_color"]),
panel.grid.minor = element_blank(),
panel.background = element_blank())
return(p)
}
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv, textX = m$My_Stat, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Mike Maignan", "Alisson")
#For annotations
m <- aggData %>%
filter(Name %in% topKeepers)
#Plot shot stopping in last three years combined
p <- aggData %>%
plot_func(X=.$PSxG_Abv/.$PSxG, Y=.$PSxG_Abv, textX = m$PSxG_Abv/m$PSxG, textY = m$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2020-21 to 2022-23")
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
ggiraph(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#For annotations
m <- curData %>%
filter(Name %in% topKeepers)
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Marc-André ter Stegen", "Alisson")
#Plot Shot Stopping This Year
p <- curData %>%
plot_func(X=.$My_Stat, Y=.$PSxG_Abv,
xTitle = "Goals Saved Above Expected Per Expected Goal",
yTitle = "Goals Saved Above Expected",
mainTitle = "Shot Stopping 2022-23")
p$layers = c(geom_hline(yintercept = 0), geom_vline(xintercept = 0), p$layers)
girafe(ggobj = p)
#Select keepers we want to add permanent annotations for in these plots
topKeepers <- c("Yehvann Diouf","Alban Lafont", "Emiliano Martínez")
#Plot cross interceptions This Year
p <- curData %>%
plot_func(X=.$Stp_Pct, Y=.$Stp,
xTitle = "Percentage of Crosses Intercepted",
yTitle = "Total Crosses Intercepted",
mainTitle = "Cross Defending 2022-23")
ggiraph(ggobj = p)
